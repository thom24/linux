// SPDX-License-Identifier: (GPL-2.0-only OR BSD-3-Clause)
/*
 * Copyright (C) 2024, STMicroelectronics - All Rights Reserved
 * Author: Alexandre Torgue <alexandre.torgue@foss.st.com> for STMicroelectronics.
 */
#include <dt-bindings/pinctrl/stm32-pinfunc.h>

&pinctrl {
	goodix_pins_a: goodix-0 {
		/*
		 * touchscreen reset needs to be configured
		 * via the pinctrl not the driver (a pull-down resistor
		 * has been soldered onto the reset line which forces
		 * the touchscreen to reset state).
		 */
		pins1 {
			pinmux = <STM32_PINMUX('I', 8, GPIO)>;
			output-high;
			bias-pull-up;
		};
		/*
		 * Interrupt line must have a pull-down resistor
		 * in order to freeze the i2c address at 0x5D
		 */
		pins2 {
			pinmux = <STM32_PINMUX('F', 4, GPIO)>;
			bias-pull-down;
		};
	};

	i2c2_pins_a: i2c2-0 {
		pins {
			pinmux = <STM32_PINMUX('B', 5, AF9)>, /* I2C2_SCL */
				 <STM32_PINMUX('D', 15, AF6)>; /* I2C2_SDA */
			bias-disable;
			drive-open-drain;
			slew-rate = <0>;
		};
	};

	i2c2_sleep_pins_a: i2c2-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('B', 5, ANALOG)>, /* I2C2_SCL */
				 <STM32_PINMUX('D', 15, ANALOG)>; /* I2C2_SDA */
		};
	};

	ltdc_pins_a: ltdc-0 {
		pins {
			pinmux = <STM32_PINMUX('F', 12, AF13)>, /* LCD_CLK */
				 <STM32_PINMUX('G',  2, AF13)>, /* LCD_HSYNC */
				 <STM32_PINMUX('I',  6, AF13)>, /* LCD_VSYNC */
				 <STM32_PINMUX('C',  5, AF14)>, /* LCD_DE */
				 <STM32_PINMUX('C', 11, AF13)>, /* LCD_R2 */
				 <STM32_PINMUX('A',  1, AF11)>, /* LCD_R3 */
				 <STM32_PINMUX('B', 15, AF13)>, /* LCD_R4 */
				 <STM32_PINMUX('G',  5, AF13)>, /* LCD_R5 */
				 <STM32_PINMUX('A', 10, AF12)>, /* LCD_R6 */
				 <STM32_PINMUX('G',  7, AF13)>, /* LCD_R7 */
				 <STM32_PINMUX('G',  8, AF13)>, /* LCD_G2 */
				 <STM32_PINMUX('G',  9, AF13)>, /* LCD_G3 */
				 <STM32_PINMUX('G', 10, AF13)>, /* LCD_G4 */
				 <STM32_PINMUX('G', 11, AF13)>, /* LCD_G5 */
				 <STM32_PINMUX('G', 12, AF13)>, /* LCD_G6 */
				 <STM32_PINMUX('C',  0, AF13)>, /* LCD_G7 */
				 <STM32_PINMUX('G', 15, AF13)>, /* LCD_B2 */
				 <STM32_PINMUX('I',  0, AF13)>, /* LCD_B3 */
				 <STM32_PINMUX('I',  1, AF13)>, /* LCD_B4 */
				 <STM32_PINMUX('A',  7, AF10)>, /* LCD_B5 */
				 <STM32_PINMUX('F',  5, AF13)>, /* LCD_B6 */
				 <STM32_PINMUX('I',  4, AF13)>; /* LCD_B7 */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};

	ltdc_sleep_pins_a: ltdc-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('F', 12, ANALOG)>, /* LCD_CLK */
				 <STM32_PINMUX('G',  2, ANALOG)>, /* LCD_HSYNC */
				 <STM32_PINMUX('I',  6, ANALOG)>, /* LCD_VSYNC */
				 <STM32_PINMUX('C',  5, ANALOG)>, /* LCD_DE */
				 <STM32_PINMUX('C', 11, ANALOG)>, /* LCD_R2 */
				 <STM32_PINMUX('A',  1, ANALOG)>, /* LCD_R3 */
				 <STM32_PINMUX('B', 15, ANALOG)>, /* LCD_R4 */
				 <STM32_PINMUX('G',  5, ANALOG)>, /* LCD_R5 */
				 <STM32_PINMUX('A', 10, ANALOG)>, /* LCD_R6 */
				 <STM32_PINMUX('G',  7, ANALOG)>, /* LCD_R7 */
				 <STM32_PINMUX('G',  8, ANALOG)>, /* LCD_G2 */
				 <STM32_PINMUX('G',  9, ANALOG)>, /* LCD_G3 */
				 <STM32_PINMUX('G', 10, ANALOG)>, /* LCD_G4 */
				 <STM32_PINMUX('G', 11, ANALOG)>, /* LCD_G5 */
				 <STM32_PINMUX('G', 12, ANALOG)>, /* LCD_G6 */
				 <STM32_PINMUX('C',  0, ANALOG)>, /* LCD_G7 */
				 <STM32_PINMUX('G', 15, ANALOG)>, /* LCD_B2 */
				 <STM32_PINMUX('I',  0, ANALOG)>, /* LCD_B3 */
				 <STM32_PINMUX('I',  1, ANALOG)>, /* LCD_B4 */
				 <STM32_PINMUX('A',  7, ANALOG)>, /* LCD_B5 */
				 <STM32_PINMUX('F',  5, ANALOG)>, /* LCD_B6 */
				 <STM32_PINMUX('I',  4, ANALOG)>; /* LCD_B7 */
		};
	};

	mdf_cck0_pins_a: mdf-cck0-0 {
		pins1 {
			pinmux = <STM32_PINMUX('F', 3, AF5)>; /* MDF1_CCK0 */
			slew-rate = <1>;
			drive-push-pull;
			bias-disable;
		};
	};

	mdf_cck0_sleep_pins_a: mdf-cck0-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('F', 3, ANALOG)>; /* MDF1_CCK0 */
		};
	};

	mdf_sdi3_pins_a: mdf-sdi3-0 {
		pins1 {
			pinmux = <STM32_PINMUX('B', 3, AF5)>; /* MDF1_SDI3 */
			slew-rate = <1>;
			drive-push-pull;
			bias-disable;
		};
	};

	mdf_sdi3_sleep_pins_a: mdf-sdi3-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('B', 3, ANALOG)>; /* MDF1_SDI3 */
		};
	};

	sdmmc1_b4_pins_a: sdmmc1-b4-0 {
		pins1 {
			pinmux = <STM32_PINMUX('E', 4, AF10)>, /* SDMMC1_D0 */
				 <STM32_PINMUX('E', 5, AF10)>, /* SDMMC1_D1 */
				 <STM32_PINMUX('E', 0, AF10)>, /* SDMMC1_D2 */
				 <STM32_PINMUX('E', 1, AF10)>, /* SDMMC1_D3 */
				 <STM32_PINMUX('E', 2, AF10)>; /* SDMMC1_CMD */
			slew-rate = <2>;
			drive-push-pull;
			bias-disable;
		};
		pins2 {
			pinmux = <STM32_PINMUX('E', 3, AF10)>; /* SDMMC1_CK */
			slew-rate = <3>;
			drive-push-pull;
			bias-disable;
		};
	};

	sdmmc1_b4_od_pins_a: sdmmc1-b4-od-0 {
		pins1 {
			pinmux = <STM32_PINMUX('E', 4, AF10)>, /* SDMMC1_D0 */
				 <STM32_PINMUX('E', 5, AF10)>, /* SDMMC1_D1 */
				 <STM32_PINMUX('E', 0, AF10)>, /* SDMMC1_D2 */
				 <STM32_PINMUX('E', 1, AF10)>; /* SDMMC1_D3 */
			slew-rate = <2>;
			drive-push-pull;
			bias-disable;
		};
		pins2 {
			pinmux = <STM32_PINMUX('E', 3, AF10)>; /* SDMMC1_CK */
			slew-rate = <3>;
			drive-push-pull;
			bias-disable;
		};
		pins3 {
			pinmux = <STM32_PINMUX('E', 2, AF10)>; /* SDMMC1_CMD */
			slew-rate = <2>;
			drive-open-drain;
			bias-disable;
		};
	};

	sdmmc1_b4_sleep_pins_a: sdmmc1-b4-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('E', 4, ANALOG)>, /* SDMMC1_D0 */
				 <STM32_PINMUX('E', 5, ANALOG)>, /* SDMMC1_D1 */
				 <STM32_PINMUX('E', 0, ANALOG)>, /* SDMMC1_D2 */
				 <STM32_PINMUX('E', 1, ANALOG)>, /* SDMMC1_D3 */
				 <STM32_PINMUX('E', 3, ANALOG)>, /* SDMMC1_CK */
				 <STM32_PINMUX('E', 2, ANALOG)>; /* SDMMC1_CMD */
		};
	};

	sdmmc2_b4_pins_a: sdmmc2-b4-0 {
		pins1 {
			pinmux = <STM32_PINMUX('E', 13, AF12)>, /* SDMMC2_D0 */
				 <STM32_PINMUX('E', 11, AF12)>, /* SDMMC2_D1 */
				 <STM32_PINMUX('E', 8, AF12)>, /* SDMMC2_D2 */
				 <STM32_PINMUX('E', 12, AF12)>, /* SDMMC2_D3 */
				 <STM32_PINMUX('E', 15, AF12)>; /* SDMMC2_CMD */
			slew-rate = <2>;
			drive-push-pull;
			bias-pull-up;
		};
		pins2 {
			pinmux = <STM32_PINMUX('E', 14, AF12)>; /* SDMMC2_CK */
			slew-rate = <3>;
			drive-push-pull;
			bias-pull-up;
		};
	};

	sdmmc2_b4_od_pins_a: sdmmc2-b4-od-0 {
		pins1 {
			pinmux = <STM32_PINMUX('E', 13, AF12)>, /* SDMMC2_D0 */
				 <STM32_PINMUX('E', 11, AF12)>, /* SDMMC2_D1 */
				 <STM32_PINMUX('E', 8, AF12)>, /* SDMMC2_D2 */
				 <STM32_PINMUX('E', 12, AF12)>; /* SDMMC2_D3 */
			slew-rate = <2>;
			drive-push-pull;
			bias-pull-up;
		};
		pins2 {
			pinmux = <STM32_PINMUX('E', 14, AF12)>; /* SDMMC2_CK */
			slew-rate = <3>;
			drive-push-pull;
			bias-pull-up;
		};
		pins3 {
			pinmux = <STM32_PINMUX('E', 15, AF12)>; /* SDMMC2_CMD */
			slew-rate = <2>;
			drive-open-drain;
			bias-pull-up;
		};
	};

	sdmmc2_b4_sleep_pins_a: sdmmc2-b4-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('E', 13, ANALOG)>, /* SDMMC2_D0 */
				 <STM32_PINMUX('E', 11, ANALOG)>, /* SDMMC2_D1 */
				 <STM32_PINMUX('E', 8, ANALOG)>, /* SDMMC2_D2 */
				 <STM32_PINMUX('E', 12, ANALOG)>, /* SDMMC2_D3 */
				 <STM32_PINMUX('E', 14, ANALOG)>, /* SDMMC2_CK */
				 <STM32_PINMUX('E', 15, ANALOG)>; /* SDMMC2_CMD */
		};
	};

	sdmmc2_d47_pins_a: sdmmc2-d47-0 {
		pins {
			pinmux = <STM32_PINMUX('E', 10, AF12)>, /* SDMMC2_D4 */
				 <STM32_PINMUX('E', 9, AF12)>, /* SDMMC2_D5 */
				 <STM32_PINMUX('E', 6, AF12)>, /* SDMMC2_D6 */
				 <STM32_PINMUX('E', 7, AF12)>; /* SDMMC2_D7 */
			slew-rate = <2>;
			drive-push-pull;
			bias-pull-up;
		};
	};

	sdmmc2_d47_sleep_pins_a: sdmmc2-d47-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('E', 10, ANALOG)>, /* SDMMC2_D4 */
				 <STM32_PINMUX('E', 9, ANALOG)>, /* SDMMC2_D5 */
				 <STM32_PINMUX('E', 6, ANALOG)>, /* SDMMC2_D6 */
				 <STM32_PINMUX('E', 7, ANALOG)>; /* SDMMC2_D7 */
		};
	};

	sdmmc3_b4_pins_a: sdmmc3-b4-0 {
		pins1 {
			pinmux = <STM32_PINMUX('B', 14, AF10)>, /* SDMMC3_D0 */
				 <STM32_PINMUX('D', 13, AF10)>, /* SDMMC3_D1 */
				 <STM32_PINMUX('B', 12, AF10)>, /* SDMMC3_D2 */
				 <STM32_PINMUX('D', 14, AF12)>, /* SDMMC3_D3 */
				 <STM32_PINMUX('D', 12, AF10)>; /* SDMMC3_CMD */
			slew-rate = <2>;
			drive-push-pull;
			bias-pull-up;
		};
		pins2 {
			pinmux = <STM32_PINMUX('B', 13, AF10)>; /* SDMMC3_CK */
			slew-rate = <3>;
			drive-push-pull;
			bias-pull-up;
		};
	};

	sdmmc3_b4_od_pins_a: sdmmc3-b4-od-0 {
		pins1 {
			pinmux = <STM32_PINMUX('B', 14, AF10)>, /* SDMMC3_D0 */
				 <STM32_PINMUX('D', 13, AF10)>, /* SDMMC3_D1 */
				 <STM32_PINMUX('B', 12, AF10)>, /* SDMMC3_D2 */
				 <STM32_PINMUX('D', 14, AF12)>; /* SDMMC3_D3 */
			slew-rate = <2>;
			drive-push-pull;
			bias-pull-up;
		};
		pins2 {
			pinmux = <STM32_PINMUX('B', 13, AF10)>; /* SDMMC3_CK */
			slew-rate = <3>;
			drive-push-pull;
			bias-pull-up;
		};
		pins3 {
			pinmux = <STM32_PINMUX('D', 12, AF10)>; /* SDMMC3_CMD */
			slew-rate = <2>;
			drive-open-drain;
			bias-pull-up;
		};
	};

	sdmmc3_b4_sleep_pins_a: sdmmc3-b4-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('B', 14, ANALOG)>, /* SDMMC1_D0 */
				 <STM32_PINMUX('D', 13, ANALOG)>, /* SDMMC1_D1 */
				 <STM32_PINMUX('B', 12, ANALOG)>, /* SDMMC1_D2 */
				 <STM32_PINMUX('D', 14, ANALOG)>, /* SDMMC1_D3 */
				 <STM32_PINMUX('B', 13, ANALOG)>, /* SDMMC1_CK */
				 <STM32_PINMUX('D', 12, ANALOG)>; /* SDMMC1_CMD */
		};
	};

	spi1_pins_a: spi1-0 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 11, AF2)>, /* SPI1_SCK */
				 <STM32_PINMUX('I', 5, AF3)>; /* SPI1_MOSI */
			drive-push-pull;
			bias-disable;
			slew-rate = <1>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('D', 1, AF2)>; /* SPI1_MISO */
			bias-disable;
		};
	};

	spi1_sleep_pins_a: spi1-sleep-0 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 11, ANALOG)>, /* SPI1_SCK */
				 <STM32_PINMUX('I', 5, ANALOG)>, /* SPI1_MOSI */
				 <STM32_PINMUX('D', 1, ANALOG)>; /* SPI1_MISO */
		};
	};

	usart1_pins_a: usart1-0 {
		pins1 {
			pinmux = <STM32_PINMUX('G', 14, AF6)>, /* USART1_TX */
				 <STM32_PINMUX('B', 9, AF6)>; /* USART1_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('B', 10, AF6)>, /* USART1_RX */
				 <STM32_PINMUX('B', 11, AF6)>; /* USART1_CTS_NSS */
			bias-disable;
		};
	};

	usart1_idle_pins_a: usart1-idle-0 {
		pins1 {
			pinmux = <STM32_PINMUX('G', 14, ANALOG)>, /* USART1_TX */
				 <STM32_PINMUX('B', 11, ANALOG)>; /* USART1_CTS_NSS */
		};
		pins2 {
			pinmux = <STM32_PINMUX('B', 9, AF6)>; /* USART1_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins3 {
			pinmux = <STM32_PINMUX('B', 10, AF6)>; /* USART1_RX */
			bias-disable;
		};
	};

	usart1_sleep_pins_a: usart1-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('G', 14, ANALOG)>, /* USART1_TX */
				 <STM32_PINMUX('B', 11, ANALOG)>, /* USART1_RTS */
				 <STM32_PINMUX('B', 9, ANALOG)>, /* USART1_CTS_NSS */
				 <STM32_PINMUX('B', 10, ANALOG)>; /* USART1_RX */
		};
	};

	usart2_pins_a: usart2-0 {
		pins1 {
			pinmux = <STM32_PINMUX('A', 4, AF6)>; /* USART2_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('A', 8, AF8)>; /* USART2_RX */
			bias-disable;
		};
	};

	usart2_idle_pins_a: usart2-idle-0 {
		pins1 {
			pinmux = <STM32_PINMUX('A', 4, ANALOG)>; /* USART2_TX */
		};
		pins2 {
			pinmux = <STM32_PINMUX('A', 8, AF8)>; /* USART2_RX */
			bias-disable;
		};
	};

	usart2_sleep_pins_a: usart2-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('A', 4, ANALOG)>, /* USART2_TX */
				 <STM32_PINMUX('A', 8, ANALOG)>; /* USART2_RX */
		};
	};

	uart4_pins_a: uart4-0 {
		pins1 {
			pinmux = <STM32_PINMUX('H', 7, AF4)>; /* UART4_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('H', 8, AF4)>; /* UART4_RX */
			bias-disable;
		};
	};

	uart4_idle_pins_a: uart4-idle-0 {
		pins1 {
			pinmux = <STM32_PINMUX('H', 7, ANALOG)>; /* UART4_TX */
		};
		pins2 {
			pinmux = <STM32_PINMUX('H', 8, AF4)>; /* UART4_RX */
			bias-disable;
		};
	};

	uart4_sleep_pins_a: uart4-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('H', 7, ANALOG)>, /* UART4_TX */
				 <STM32_PINMUX('H', 8, ANALOG)>; /* UART4_RX */
		};
	};

	usart6_pins_a: usart6-0 {
		pins1 {
			pinmux = <STM32_PINMUX('F', 13, AF3)>, /* USART6_TX */
				 <STM32_PINMUX('C', 3, AF6)>;  /* USART6_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('H', 9, AF6)>, /* USART6_RX */
				 <STM32_PINMUX('F', 15, AF3)>; /* USART6_CTS_NSS */
			bias-pull-up;
		};
	};

	usart6_idle_pins_a: usart6-idle-0 {
		pins1 {
			pinmux = <STM32_PINMUX('F', 13, ANALOG)>, /* USART6_TX */
				 <STM32_PINMUX('F', 15, ANALOG)>; /* USART6_CTS_NSS */
		};
		pins2 {
			pinmux = <STM32_PINMUX('C', 3, AF6)>; /* USART6_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins3 {
			pinmux = <STM32_PINMUX('H', 9, AF6)>; /* USART6_RX */
			bias-pull-up;
		};
	};

	usart6_sleep_pins_a: usart6-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('F', 13, ANALOG)>, /* USART6_TX */
				 <STM32_PINMUX('C', 3, ANALOG)>,  /* USART6_RTS */
				 <STM32_PINMUX('F', 15, ANALOG)>, /* USART6_CTS_NSS */
				 <STM32_PINMUX('H', 9, ANALOG)>; /* USART6_RX */
		};
	};
};
